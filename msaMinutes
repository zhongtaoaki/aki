# マイクロサービスとは

## 背景・マイクロサービスが生まれた前に
従来、世の中での大半のシステムはモノリシックで作られたものだ。　

モノリシック（monolithic）は、一体となっている、あるいは一枚岩的な組織やものという意味である。
ソフトウェア的には、全体が1つのモジュールでできていて、分割されていないことを意味する。

モノリシック的なアーキテクチャーでは、UI (ユーザー インタフェース)、ビジネス処理ロジックは単一のプロセスとして実行される。
必要なデータは、すべての機能で共有するデータベースに格納されている。

なにか変更が大規模なものであれ小規模なものであれ、アプリケーション全体を再構築しなければならない。
変更を重ねるにつれて、モジュールの境界はあやふやなものとなり、ある処理ロジックを特定のモジュール内に隠蔽しておくことが難しくなる。

また、ビジネスの拡大によってアクセスのリクエストが増大した場合でも、ユーザーインタフェース機能などの一部分のスケールが難しく、アプリケーション全体をスケールしなければならない。膨大なハードウェアリソースが必要となってしまう。

## 定義・マイクロサービスとは
モノリシックのその問題点を解決するために、マイクロサービスマイクロサービスアーキテクチャーが生まれた。

マイクロサービスは、できるだけ小さなサービス単位であり、基本的は一個の小さいアプリケーションと一個のデータベースの組み合わせである。
マイクロサービスアーキテクチャーはこの複数の小さなサービス単位互いに連携させる構造化設計である。

他のマイクロサービスでのデータも含めて完全に独立しておりので、あるマイクロサービスの変更が他のマイクロサービスに影響を及ぼしない。（agility）

故に、ビジネスの拡大に応じるスケールは、独立して必要な部分だけでスケールできる。（scalability）

## 原因・なぜマイクロサービスが流行ってきた
こういう分散システムの考え方は新しいものではない。
しかし、提唱されるのは2014年からだ。
何故ならば、ビジネスの変更、市場は移り変わりが速くなってきたのは理由の一つであり、
もう一つ重要な条件はクラウド技術の発展である。

### ビジネス変更
「私たちが学んだことの1つは、市場への投入が迅速にできなければ、どのようにうまく設計し、構築し、デプロイし、人員を訓練しようとも、確実に市場は移り変わってしまうため、タイミングがちょっと遅かったという理由だけで、いまいちな結果になってしまうということです。」--James McGlennon

IT技術の価値の一つは、ビジネスにサービスを提供することだ。ビジネスに追いつかないと、いくら完璧な技術でもビジネス上では意味がない。
モノリシックには、変更があってもすぐに対応しにくくて、遅いのみならず影響範囲が大きいので修正しづらい。
一方、マイクロサービスには、独立しているので必要な部分だけを修正すればよい。対応は迅速であり、更に修正しやすい。

### クラウド技術の発展
クラウドのおかげで、ハードウェアを購入したり、ソフトウェアをインストールしなくても、アプリケーションの構築と稼働はできるようになった。
つまり、ハードウェア上の制限から解放され、システムを分散したり、スケールしたりしやすくなった。
そのクラウドの威力を発揮し、クラウドで動かすのに最適化されたアプリを開発する事は、クラウド・ネイティブな開発という。

あるアプリケーションが、クラウドネイティブアプリケーであるの？
判断基準は様々あり、その一つはマイクロサービスアーキテクチャを採用しているかどうか。
言い換えると、マイクロサービスアーキテクチャはクラウドのメリットを最大限に利用できる。


## 外部リンク
- [Povital](https://pivotal.io/jp/cloud-native)
- [microsoft](https://docs.microsoft.com/ja-jp/dotnet/architecture/cloud-native)
- [cncf](https://www.cncf.io/)
